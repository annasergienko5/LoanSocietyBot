variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  MAVEN_IMAGE: maven:3.8.5-openjdk-17-slim
  COPY_TO: ''
  FIRST_NAME: ''

services:
  - docker:20.10.16-dind

stages:
  - test
  - build
  - deploy
  - notification

build-jar-with-art:
  stage: build
  image: "$MAVEN_IMAGE"
  variables: 
    FILE: 'src/main/java/com/example/GringottsTool/Constants.java'
  script:
    - DATE=`date -u +"%Y"-%m-%d-%H_%M`
    - sed -i "s/dev/$CI_COMMIT_BRANCH\_$CI_COMMIT_SHA\_$DATE/" $FILE
    - mvn clean package -DskipTests=true
  when: always
  artifacts:
    paths:
      - ./target/GringottsTool.jar
    expire_in: 1h
    when: on_success

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

.deploy-with-art:
  stage: deploy
  image: ubuntu:latest
  variables:
    FIRST_NAME:$CI_COMMIT_BRANCH
  script:
    - ls ./target # артефакт из build-jar
    - mv ./target/GringottsTool.jar ./GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar
    - ls 
    - apt-get install -y openssh-client
    - /usr/bin/scp -P 6022 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar depl0y@dev.staff4.me:/home/depl0y/$COPY_TO
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@dev.staff4.me -p 6022 rm -f /home/depl0y/$COPY_TO/GringottsTool-dev-current.jar
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@dev.staff4.me -p 6022 ln -s /home/depl0y/$COPY_TO/GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar /home/depl0y/$COPY_TO/GringottsTool-dev-current.jar
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@dev.staff4.me -p 6022 sudo systemctl restart gringottstool-dev.service
  dependencies:
    - build-jar-with-art
  needs: ["build-jar-with-art"]

deploy-with-art-branch:
  extends: .deploy-with-art
  variables:
    FIRST_NAME: $CI_COMMIT_BRANCH
    COPY_TO: dev
  except:
    - main
    - dev
    - tags
  when: manual

deploy-with-art-dev:
  extends: .deploy-with-art
  variables:
    FIRST_NAME: $CI_COMMIT_BRANCH
    COPY_TO: dev
  only:
    - dev

deploy-with-art-tag:
  extends: .deploy-with-art
  variables:
    FIRST_NAME: $CI_COMMIT_TAG
    COPY_TO: prod
  script:
    - mv ./target/GringottsTool.jar ./GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar
    - apt-get install -y openssh-client
    - /usr/bin/scp -P 6022 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar depl0y@prod.staff4.me:/home/depl0y/prod
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@prod.staff4.me -p 6022 rm -f /home/depl0y/prod/GringottsTool-prod-current.jar
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@prod.staff4.me -p 6022 ln -s /home/depl0y/prod/GringottsTool-$FIRST_NAME-$CI_COMMIT_SHA.jar /home/depl0y/prod/GringottsTool-prod-current.jar
    - /usr/bin/ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null depl0y@prod.staff4.me -p 6022 sudo systemctl restart gringottstool-prod.service
  only:
    - tags

.build-docker:
  stage: build
  needs: ["build-jar-with-art"]
  script:
    - mv target/GringottsTool.jar ./
    - docker login registry.gitlab.com -u gitlab+deploy-token-test -p $DOCKER_REGISTRY_TOKEN
    - docker build -t registry.gitlab.com/goblin_dev_inc/gringottstool .
    - docker push registry.gitlab.com/goblin_dev_inc/gringottstool

build-docker-branch:
  extends: .build-docker
  when: manual
  except:
    - main
    - dev
    - tags

build-docker-tag:
  extends: .build-docker
  only:
    - tags

build-docker-dev:
  extends: .build-docker
  only:
    - dev

build-docker-main:
  extends: .build-docker
  only:
    - main

include:
  local: /ops/test-ci.yml